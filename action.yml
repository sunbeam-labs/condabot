name: "Update Conda Lockfiles and Create PR"
description: "Generates conda lockfiles and opens a PR"
inputs:
  env-path:
    description: "Path to the conda env file dir"
    required: true
    default: "envs/"
  test-path:
    description: "Path to the test directory"
    required: false
    default: ".tests/"
  sunbeam-version:
    description: "Sunbeam version to use for tests"
    required: false
    default: "main"

outputs:
  pr-number:
    description: "Number of the created pull request"
    value: ${{ steps.create-pr.outputs.pull-request-number }}

runs:
  using: "composite"
  steps:
    - uses: mamba-org/setup-micromamba@v2
      with:
        environment-name: lockenv
        create-args: python=3.11
        init-shell: bash
        cache-downloads: true

    - name: Install conda-lock
      shell: bash -l {0}
      run: micromamba install -c conda-forge conda-lock --yes

    - name: Generate lockfile
      shell: bash -l {0}
      run: |
        for envfile in $(find ${{ inputs.env-path }} -name '*.yml' -o -name '*.yaml'); do
          echo "Locking $envfile"
          # Get the filename without extension using parameter expansion
          filename=$(basename "$envfile")
          envname=${filename%.*}
          outdir=$(dirname "$envfile")
          outfile="$outdir/${envname}.linux-64.pin.txt"
          conda-lock lock -f "$envfile" --kind explicit --micromamba --platform linux-64 --filename-template conda-lock-{platform}.txt
          mv conda-lock-linux-64.txt "$outfile"
        done

    - name: Create PR
      id: create-pr
      uses: peter-evans/create-pull-request@v6
      with:
        branch: update/conda-lock
        commit-message: Update conda lockfiles [automated]
        title: Update Conda lockfiles
        body: |
          This PR updates all `conda-lock` files.
            - Automated weekly by GitHub Actions
            - A test report will be posted in a comment once the tests run
            - To trigger test reruns, checkout this branch, make a commit, and push it (`git commit --allow-empty -m "Trigger tests"`)
        author: GitHub <noreply@github.com>
        labels: |
          automated
          dependencies

    - name: Run tests
      id: run-tests
      if: steps.create-pr.outputs.pull-request-number != ''
      shell: bash
      run: |
        git clone --depth 1 --branch ${{ inputs.sunbeam-version }} https://github.com/sunbeam-labs/sunbeam.git sunbeam_test
        pip install -e sunbeam_test[dev]
        pytest -vvvv -l --tb=long ${{ inputs.test-path }}
      
    - name: Generate test summary
      if: steps.create-pr.outputs.pull-request-number != '' && always()
      shell: bash
      run: |
        result="${{ steps.run-tests.outcome }}"
        if [[ "$result" == "success" ]]; then
          icon="✅"
        else
          icon="❌"
        fi
        
        echo "### ${icon} Test Results for PR #${{ steps.create-pr.outputs.pull-request-number }}" >> comment.md
        echo "- Workflow: \`tests.yml\`" >> comment.md
        echo "- Status: $result" >> comment.md
        echo "- Run: [View Run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> comment.md

    - name: Comment on PR
      if: steps.create-pr.outputs.pull-request-number != '' && always()
      uses: peter-evans/create-or-update-comment@v4
      with:
        issue-number: ${{ steps.create-pr.outputs.pull-request-number }}
        body-file: comment.md